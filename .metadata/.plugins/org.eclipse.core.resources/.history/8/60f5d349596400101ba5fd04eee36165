package com.app.aisummarizer.service;

import org.springframework.stereotype.Service;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;

@Service
public class GeminiSummarizerService {

    private static final String API_KEY = "AIzaSyBI25DQSGZQwXBdlanMQB1U_VOCj1FUcMQ"; // Replace this
    private static final String API_URL =
    	    "https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=" + API_KEY;
//   private static final String API_URL = "https://generativelanguage.googleapis.com/v1beta/models?key=" + API_KEY;

    public String summarize(String inputText) {
        try {
            String prompt = "Summarize the following resume content:\n\n" + inputText;

            String requestBody = "{\n" +
                "  \"contents\": [\n" +
                "    {\n" +
                "      \"parts\": [\n" +
                "        {\"text\": \"" + prompt.replace("\"", "\\\"") + "\"}\n" +
                "      ]\n" +
                "    }\n" +
                "  ]\n" +
                "}";

            HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(API_URL))
                .header("Content-Type", "application/json")
                .POST(HttpRequest.BodyPublishers.ofString(requestBody))
                .build();

            HttpClient client = HttpClient.newHttpClient();
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

            System.out.println("Gemini API raw response:\n" + response.body());

            return extractSummaryFromJson(response.body());

        } catch (Exception e) {
            e.printStackTrace();
            return "Error: " + e.getMessage(); // this avoids "ror"
        }
    }

    private String extractSummaryFromJson(String json) {
    	try {
            // Basic validation: Check if it's an error
            if (json.contains("\"error\"")) {
                return "Gemini API error: " + json;
            }

            // Try to find "text": "<summary>" value in success response
            int textIndex = json.indexOf("\"text\":");
            if (textIndex == -1) return "No summary found in response.";

            int start = textIndex + 8;
            int end = json.indexOf("\"", start);
            if (start >= end || end == -1) return "No summary extracted.";

            return json.substring(start, end).replace("\\n", "\n");
        } catch (Exception e) {
            System.out.println("Failed to parse summary from JSON:");
            e.printStackTrace();
            return "Failed to extract summary.";
        }
    }
}