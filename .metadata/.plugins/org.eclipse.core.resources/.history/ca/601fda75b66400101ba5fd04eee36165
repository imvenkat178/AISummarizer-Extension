package com.app.aisummarizer.service;

import org.springframework.stereotype.Service;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import java.util.List;

@Service
public class HuggingFaceSummarizerService {
	private static final String API_URL = "https://api-inference.huggingface.co/models/google/pegasus-xsum";
//    private static final String API_URL = "https://api-inference.huggingface.co/models/facebook/bart-large-cnn";
    private static final String API_TOKEN = "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"; // Replace with your Hugging Face token

    public String summarize(String inputText) {
        try {
            List<String> chunks = splitIntoChunks(inputText, 800); // Split into ~800 character chunks
            StringBuilder finalSummary = new StringBuilder();

            for (String chunk : chunks) {
                String escapedText = chunk
                        .replace("\\", "\\\\")
                        .replace("\"", "\\\"")
                        .replace("\n", "\\n")
                        .replace("\r", "")
                        .replace("\t", "\\t");

                String requestBody = "{ \"inputs\": \"" + escapedText + "\" }";

                HttpRequest request = HttpRequest.newBuilder()
                        .uri(URI.create(API_URL))
                        .header("Authorization", "Bearer " + API_TOKEN)
                        .header("Content-Type", "application/json")
                        .POST(HttpRequest.BodyPublishers.ofString(requestBody))
                        .build();

                HttpClient client = HttpClient.newHttpClient();
                HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

                String raw = response.body();
                System.out.println("üîÅ Hugging Face chunk response:\n" + raw);

                String chunkSummary = extractSummaryFromJson(raw);
                finalSummary.append(chunkSummary).append("\n\n");
            }

            return finalSummary.toString().trim();

        } catch (Exception e) {
            e.printStackTrace();
            return "‚ùå Hugging Face API failed: " + e.getMessage();
        }
    }

    private String extractSummaryFromJson(String json) {
        try {
            if (json.contains("\"error\"")) {
                return "Hugging Face API error: " + json;
            }

            // Expected: [{ "summary_text": "..." }]
            int textIndex = json.indexOf("\"summary_text\":");
            if (textIndex == -1) return "No summary extracted.";

            int start = json.indexOf("\"", textIndex + 15) + 1;
            int end = json.indexOf("\"", start);
            if (start <= 0 || end <= start) return "No summary extracted.";

            return json.substring(start, end).replace("\\n", "\n");

        } catch (Exception e) {
            e.printStackTrace();
            return "‚ùå Failed to extract summary.";
        }
    }

    private List<String> splitIntoChunks(String text, int maxChunkLength) {
        List<String> chunks = new ArrayList<>();
        String[] sentences = text.split("(?<=[.?!])\\s+"); // Split at end of sentence
        StringBuilder chunk = new StringBuilder();

        for (String sentence : sentences) {
            if (chunk.length() + sentence.length() > maxChunkLength) {
                chunks.add(chunk.toString().trim());
                chunk.setLength(0); // Reset for next chunk
            }
            chunk.append(sentence).append(" ");
        }

        // Add last chunk if remaining
        if (chunk.length() > 0) {
            chunks.add(chunk.toString().trim());
        }

        return chunks;
    }
}